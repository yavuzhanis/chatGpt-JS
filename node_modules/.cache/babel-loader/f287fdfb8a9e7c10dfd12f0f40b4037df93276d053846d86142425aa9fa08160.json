{"ast":null,"code":"var _jsxFileName = \"/Users/yavuzhanis/Desktop/react-chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChat, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const createNewChat = () => {\n    setMessage(null);\n    setValue(\"\");\n    setCurrentTitle(null);\n  };\n  const getMessages = async () => {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => [...prevChats, {\n        title: currentTitle,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle]);\n  console.log(previousChat);\n  const currentChat = previousChat.filter(previousChats => previousChats.title === currentTitle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChat,\n        children: \" + New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Blugh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: \"Made by Yavuzhan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YoboGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: [currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 53\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: \"Chat Gpt March 14 version .Free reserved Preview Your FeedBack will help us improve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nX/M5WnTrBBXRtaizjGcG88LEX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChat","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","log","prevChats","title","role","content","currentChat","filter","previousChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chatMessage","index","onChange","e","target","id","_c","$RefreshReg$"],"sources":["/Users/yavuzhanis/Desktop/react-chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n\nfunction App() {\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChat, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null);\n  }\n  const getMessages = async () => {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        message: value,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/completions', options)\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => (\n        [...prevChats, {\n          title: currentTitle,\n          role: \"user\",\n          content: value,\n        }, {\n          title: currentTitle,\n          role: message.role,\n          content: message.content,\n        }]\n      ));\n    }\n  }, [message, currentTitle]);\n\n  console.log(previousChat);\n\n  const currentChat = previousChat.filter(previousChats => previousChats.title === currentTitle)\n  return (\n    <div className=\"App\">\n      <section className=\"side-bar\">\n        <button onClick={createNewChat}> + New Chat</button>\n        <ul className=\"history\">\n          <li>Blugh</li>\n        </ul>\n        <nav>Made by Yavuzhan</nav>\n      </section>\n      <section className=\"main\">\n        {!currentTitle && <h1>YoboGPT</h1>}\n        <ul className=\"feed\">\n          {currentChat.map((chatMessage , index) => <li key={index}>\n            <p></p>\n            <p></p>\n          </li>)};\n        </ul>\n        <div className=\"bottom-section\">\n          <div className=\"input-container\">\n            <input value={value} onChange={(e) => setValue(e.target.value)} />\n            <div id=\"submit\" onClick={getMessages}>\n              âž¢\n            </div>\n            <p className=\"info\">\n              Chat Gpt March 14 version .Free reserved Preview\n              Your FeedBack will help us improve\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}